pipeline {
  options {
    ansiColor('xterm')
  }
  agent {
    kubernetes {
      yamlFile 'builder.yaml'
    }
  }
  tools{
      jdk 'myjava'
      maven 'mymaven'
  }

  stages {

    stage("Checkout code") {
        steps {
            checkout scm
        }
    }
    stage("Package") {
        steps {
            sh "mvn clean package"
        }
    }
    
    stage("Build image") {
            steps {
                script {
                    myapp = docker.build("kalyand14/myimage:${env.BUILD_ID}")
                }
            }
        }
        stage("Push image") {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerID') {
                            myapp.push("latest")
                            myapp.push("${env.BUILD_ID}")
                    }
                }
            }
        }        


    stage('Deploy App to Kubernetes') {     
      steps {
        container('kubectl') {
          withCredentials([file(credentialsId: 'mykubeconfig', variable: 'KUBECONFIG')]) {
            sh 'sed -i "s/<TAG>/${BUILD_NUMBER}/" deployment.yaml'
            sh 'kubectl apply -f deployment.yaml'
          }
        }
      }
    }
  
  }
}
